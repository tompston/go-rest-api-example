// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: balance.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const balance_GetUserBalanceByUserID = `-- name: Balance_GetUserBalanceByUserID :one
SELECT    SUM(CASE WHEN transactions.sender_id = $1::uuid THEN -transactions.amount ELSE transactions.amount END) as balance
FROM      transactions
WHERE     transactions.sender_id = $1::uuid OR transactions.receiver_id = $1::uuid
`

func (q *Queries) Balance_GetUserBalanceByUserID(ctx context.Context, userID uuid.UUID) (int64, error) {
	row := q.db.QueryRowContext(ctx, balance_GetUserBalanceByUserID, userID)
	var balance int64
	err := row.Scan(&balance)
	return balance, err
}

const balance_GetWhereUserIdEquals = `-- name: Balance_GetWhereUserIdEquals :one
SELECT      b.balance
FROM        balances b
JOIN        transactions t ON b.user_id = t.sender_id OR b.user_id = t.receiver_id
WHERE       b.user_id = $1
GROUP BY    b.balance
`

func (q *Queries) Balance_GetWhereUserIdEquals(ctx context.Context, userID uuid.UUID) (int32, error) {
	row := q.db.QueryRowContext(ctx, balance_GetWhereUserIdEquals, userID)
	var balance int32
	err := row.Scan(&balance)
	return balance, err
}

const balance_UserReceivedTotalAmount = `-- name: Balance_UserReceivedTotalAmount :one
SELECT      SUM(t.amount)
FROM        transactions t
WHERE       t.receiver_id = 'cc720122-04df-47c3-98ab-854bdedb9f8c'
`

func (q *Queries) Balance_UserReceivedTotalAmount(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, balance_UserReceivedTotalAmount)
	var sum int64
	err := row.Scan(&sum)
	return sum, err
}

const balance_UserSentTotalAmount = `-- name: Balance_UserSentTotalAmount :one
SELECT      SUM(t.amount)
FROM        transactions t
WHERE       t.sender_id = 'cc720122-04df-47c3-98ab-854bdedb9f8c'
`

func (q *Queries) Balance_UserSentTotalAmount(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, balance_UserSentTotalAmount)
	var sum int64
	err := row.Scan(&sum)
	return sum, err
}
